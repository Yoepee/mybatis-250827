<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.back.domain.post.post.repository.PostRepository">

    <!-- 전체 게시물 조회 -->
    <!--
    resultType 간소화 반영
    수정 전
    <select id="findAll" resultType="com.back.domain.post.post.dto.Post>
    -->
    <select id="findAll" resultType="Post">
        SELECT * FROM post
        <if test="!orderBy.isEmpty() and !direction.isEmpty()">
            ORDER BY
            <choose>
                <when test="orderBy.equals('title')">
                    title
                </when>
                <when test="orderBy.equals('createDate')">
                    createdate
                </when>
                <when test="orderBy.equals('modifyDate')">
                    modifydate
                </when>
            </choose>
            <if test="!orderBy.isEmpty() and direction.toUpperCase() == 'DESC'">
                DESC
            </if>
        </if>
    </select>

    <!-- 정렬된 게시물 조회 -->
    <select id="findAllOrdered" resultType="Post">
        SELECT * FROM post
        <if test="orderBy != null and orderBy != ''">
            ORDER BY
            <choose>
                <when test="orderBy == 'title'">title</when>
                <when test="orderBy == 'createDate'">createDate</when>
                <when test="orderBy == 'modifyDate'">modifyDate</when>
            </choose>
        </if>
        <if test="orderByDirection != null and orderByDirection.toLowerCase() == 'desc'">
            DESC
        </if>
    </select>

    <!-- 단일 게시물 조회 -->
    <select id="findById" resultType="Post">
        SELECT * FROM post WHERE id = #{id}
    </select>

    <select id="findByIdWithAuthorName" resultType="Post">
        SELECT
            p.*,
            m.name as authorName
        FROM post p
        LEFT JOIN member m
        ON p.memberId = m.id
        WHERE p.id = #{id};
    </select>

    <!-- 게시물 생성 (ID 반환) -->
    <insert id="create" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO post(createDate, modifyDate, title, content, memberId)
        VALUES (NOW(), NOW(), #{title}, #{content}, #{memberId})
    </insert>

    <!-- 게시물 생성 V2 -->
    <insert id="createV2">
        INSERT INTO post
        SET createDate = NOW(),
            modifyDate = NOW(),
            title = #{title},
            content = #{content},
            memberId = #{memberId}
    </insert>

    <!-- 마지막 INSERT ID 조회 -->
    <select id="getLastInsertId" resultType="int">
        SELECT LAST_INSERT_ID()
    </select>

    <!-- 게시물 삭제 -->
    <delete id="deleteById">
        DELETE FROM post WHERE id = #{id}
    </delete>

    <!-- 게시물 수정 -->
    <update id="update">
        UPDATE post
        <set>
            modifyDate = NOW(),
            <if test="!title.isEmpty()">title = #{title},</if>
            <if test="!content.isEmpty()">content = #{content},</if>
        </set>
        WHERE id = #{id}
    </update>

    <!-- 게시물 검색 -->
    <select id="findByType" resultType="Post">
        SELECT * FROM post
        <where>
            <choose>
                <when test="type.equals('title')">
                    title LiKE CONCAT('%', #{keyword}, '%')
                </when>
                <when test="type.equals('content')">
                    content LiKE CONCAT('%', #{keyword}, '%')
                </when>
                <otherwise>
                    (
                    title LiKE CONCAT('%', #{keyword}, '%')
                    OR
                    content LiKE CONCAT('%', #{keyword}, '%')
                    )
                </otherwise>
            </choose>
        </where>
    </select>

    <!-- 다중 게시물 삭제 -->
    <delete id="deleteByIds">
        DELETE FROM post
        <where>
            id IN
            <foreach collection="ids" item="id" open="(" separator="," close=")">
                #{id}
            </foreach>
        </where>
    </delete>


</mapper>